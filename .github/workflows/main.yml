name: Tests

on: [push, pull_request]

jobs:
  ci:
    name: ci
    runs-on: ubuntu-18.04

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        options: --health-cmd="pg_isready" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432
      mariadb:
        image: mariadb
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 3
        ports:
          - 3306:3306

    strategy:
      fail-fast: false
      matrix:
        moodle-branch: ['master', 'MOODLE_311_STABLE', 'MOODLE_310_STABLE', 'MOODLE_39_STABLE']
        php: ['7.4', '7.3']
        database: ['mariadb', 'pgsql']

    steps:
      - name: checkout plugin
        uses: actions/checkout@v2
        with:
          path: this-plugin

      - name: setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, pgsql, mysqli
          tools: composer, behat, phpunit, phpmd, phpcbf, phpcpd, psalm, phpcs
          coverage: xdebug

      - name: checkout moodle-plugin-ci
        uses: actions/checkout@v2
        with:
          repository: moodlehq/moodle-plugin-ci
          path: ci

      - name: other
        run: |
           composer install
           echo "$(cd bin; pwd)" >> $GITHUB_PATH
           echo "$(cd vendor/bin; pwd)" >> $GITHUB_PATH
           sudo locale-gen en_AU.UTF-8
        working-directory: ci

      - name: install Moodle
        run: moodle-plugin-ci --ansi install --db-host=127.0.0.1 --plugin this-plugin
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}
      
      - name: phplint
        run: moodle-plugin-ci --ansi phplint

      - name: phpcpd
        run: moodle-plugin-ci --ansi phpcpd

      - name: phpmd
        run: moodle-plugin-ci --ansi phpmd

      - name: codechecker
        run: moodle-plugin-ci --ansi codechecker

      - name: validate
        run: moodle-plugin-ci --ansi validate

      - name: savepoints
        run: moodle-plugin-ci --ansi savepoints

      - name: mustache
        run: moodle-plugin-ci --ansi mustache

      - name: grunt
        run: moodle-plugin-ci --ansi grunt

      - name: phpunit 
        run: moodle-plugin-ci --ansi phpunit --coverage-text --coverage-clover

      - name: firefox
        run: moodle-plugin-ci --ansi behat
      
      - name: chrome
        run: moodle-plugin-ci --ansi behat --profile chrome

      - name: init classic
        run: php moodle/admin/tool/behat/cli/init.php -a="classic"

      - name: firefox classic
        run: moodle-plugin-ci --ansi behat --suite="classic"
      
      - name: chrome classic
        run: moodle-plugin-ci --ansi behat  --suite="classic" --profile chrome

      - name: admin bookmarks
        run: php admin/tool/behat/cli/run.php --profile=chrome --tags=@block_admin_bookmarks
        working-directory: moodle

      - name: privacy
        run: vendor/bin/phpunit --colors --no-coverage --testsuite tool_dataprivacy_testsuite,tool_policy_testsuite,core_privacy_testsuite
        working-directory: moodle

      - name: coveralls
        env:
          COVERALLS_RUN_LOCALLY: true
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: moodle-plugin-ci --ansi coveralls-upload
        if: matrix.moodle-branch == 'master'
